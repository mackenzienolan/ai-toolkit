name: Create GitHub Release

on:
  push:
    tags:
      - '@ai-toolkit/core@*'
      - '@ai-toolkit/cache@*'
      - '@ai-toolkit/memory@*'
      - '@ai-toolkit/guardrails@*'
      - '@ai-toolkit/react@*'

permissions:
  contents: write

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Extract package info
        id: package_info
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          PACKAGE_NAME=$(echo $TAG | cut -d@ -f1,2)
          VERSION=$(echo $TAG | cut -d@ -f3)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "package=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "# Release ${{ steps.package_info.outputs.package }}@${{ steps.package_info.outputs.version }}" > release_notes.md
          echo "" >> release_notes.md
          echo "## Changes" >> release_notes.md
          echo "" >> release_notes.md

          # Extract changes from CHANGELOG if it exists
          PACKAGE_DIR=$(echo "${{ steps.package_info.outputs.package }}" | sed 's/@ai-toolkit\//packages\//')
          if [ -f "$PACKAGE_DIR/CHANGELOG.md" ]; then
            echo "See [CHANGELOG.md]($PACKAGE_DIR/CHANGELOG.md) for details" >> release_notes.md
          fi

          echo "" >> release_notes.md
          echo "## Installation" >> release_notes.md
          echo "" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "npm install ${{ steps.package_info.outputs.package }}@${{ steps.package_info.outputs.version }}" >> release_notes.md
          echo '```' >> release_notes.md
          echo "" >> release_notes.md
          echo "## npm Package" >> release_notes.md
          echo "https://www.npmjs.com/package/${{ steps.package_info.outputs.package }}/v/${{ steps.package_info.outputs.version }}" >> release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.package_info.outputs.tag }}
          name: ${{ steps.package_info.outputs.package }}@${{ steps.package_info.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.package_info.outputs.version, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
